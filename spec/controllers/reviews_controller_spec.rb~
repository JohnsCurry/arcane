require 'spec_helper'


describe ReviewsController do
  describe "POST create" do
    context "with authenticated users" do
      
      let(:current_user) { Fabricate(:user) }
      before { session[:user_id] = current_user.id }
      
      context "with valid inputs" do
        it "redirects to the skill show page" do
          skill = Fabricate(:skill)
          post :create, review: Fabricate.attributes_for(:review), skill_id: skill.id
          expect(response).to redirect_to skill
        end
        it "creates a review" do
          skill = Fabricate(:skill)
          post :create, review: Fabricate.attributes_for(:review), skill_id: skill.id
          expect(Review.count).to eq(1)
        end
        it "creates a review associated with the skill" do
          skill = Fabricate(:skill)
          post :create, review: Fabricate.attributes_for(:review), skill_id: skill.id
          expect(Review.first.skill).to eq(skill)
        end
        it "creates a review associated with the signed in user" do
          skill = Fabricate(:skill)
          post :create, review: Fabricate.attributes_for(:review), skill_id: skill.id
          expect(Review.first.user).to eq(current_user)
        end
      end

      context "with invalid inputs" do
        it "does not create a review" do
          skill = Fabricate(:skill)
          post :create, review: {rating: 4}, skill_id: skill.id
          expect(Review.count).to eq(0)
        end
        it "renders the skills/show template"
        it "sets @skill"
        it "sets @reviews"
      end
    end
    context "with unauthenticated users"
  end
end
